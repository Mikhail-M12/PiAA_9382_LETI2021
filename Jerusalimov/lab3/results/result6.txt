enable Intermediate data? 1 - Yes 0 - No
_____________Input graph__________________

____________Fulkerson___________________

__________________Breadth First Search___________________

	There are unconsidered vertices in the stack
	We are looking for neighbors, for the vertex: a

				 a->b 
		 The weight > 0 && not been visited
		Write to the path...

				 a->c 
		 The weight > 0 && not been visited
		Write to the path...

				 a->g 
		 The weight > 0 && not been visited
		Write to the path...

		Current vertex is equal to source, search is complete!
 		Path is equal: g<-a

_______________________________________________
			Fulkerson
Minimum bandwidth for path: g<-a, is equal: 8
We go all the path and change the values of K1 and K2.
For the throughput of the rib and for the throughput in the opposite direction, respectively
	      8/0
	   a <-> g
	K1 = 8 - 8
	K2 = 0 + 8
	K1 {a -> g = 0}
	K2 {a <- g = 8}

Add the minimum bandwidth to the maximum flow: 0 + 8

__________________Breadth First Search___________________

	There are unconsidered vertices in the stack
	We are looking for neighbors, for the vertex: a

				 a->b 
		 The weight > 0 && not been visited
		Write to the path...

				 a->c 
		 The weight > 0 && not been visited
		Write to the path...

				 a->g 

	There are unconsidered vertices in the stack
	We are looking for neighbors, for the vertex: c

				 c->m 
		 The weight > 0 && not been visited
		Write to the path...


	There are unconsidered vertices in the stack
	We are looking for neighbors, for the vertex: m

				 m->n 
		 The weight > 0 && not been visited
		Write to the path...


	There are unconsidered vertices in the stack
	We are looking for neighbors, for the vertex: n


	There are unconsidered vertices in the stack
	We are looking for neighbors, for the vertex: b

				 b->d 
		 The weight > 0 && not been visited
		Write to the path...

				 b->e 
		 The weight > 0 && not been visited
		Write to the path...


	There are unconsidered vertices in the stack
	We are looking for neighbors, for the vertex: e

				 e->a 
				 e->f 
		 The weight > 0 && not been visited
		Write to the path...


	There are unconsidered vertices in the stack
	We are looking for neighbors, for the vertex: f

				 f->g 
		 The weight > 0 && not been visited
		Write to the path...

		Current vertex is equal to source, search is complete!
 		Path is equal: g<-f<-e<-b<-a

_______________________________________________
			Fulkerson
Minimum bandwidth for path: g<-f<-e<-b<-a, is equal: 1
We go all the path and change the values of K1 and K2.
For the throughput of the rib and for the throughput in the opposite direction, respectively
	      1/0
	   f <-> g
	K1 = 1 - 1
	K2 = 0 + 1
	K1 {f -> g = 0}
	K2 {f <- g = 1}

	      2/0
	   e <-> f
	K1 = 2 - 1
	K2 = 0 + 1
	K1 {e -> f = 1}
	K2 {e <- f = 1}

	      3/0
	   b <-> e
	K1 = 3 - 1
	K2 = 0 + 1
	K1 {b -> e = 2}
	K2 {b <- e = 1}

	      3/0
	   a <-> b
	K1 = 3 - 1
	K2 = 0 + 1
	K1 {a -> b = 2}
	K2 {a <- b = 1}

Add the minimum bandwidth to the maximum flow: 8 + 1

__________________Breadth First Search___________________

	There are unconsidered vertices in the stack
	We are looking for neighbors, for the vertex: a

				 a->b 
		 The weight > 0 && not been visited
		Write to the path...

				 a->c 
		 The weight > 0 && not been visited
		Write to the path...

				 a->g 

	There are unconsidered vertices in the stack
	We are looking for neighbors, for the vertex: c

				 c->m 
		 The weight > 0 && not been visited
		Write to the path...


	There are unconsidered vertices in the stack
	We are looking for neighbors, for the vertex: m

				 m->n 
		 The weight > 0 && not been visited
		Write to the path...


	There are unconsidered vertices in the stack
	We are looking for neighbors, for the vertex: n


	There are unconsidered vertices in the stack
	We are looking for neighbors, for the vertex: b

				 b->d 
		 The weight > 0 && not been visited
		Write to the path...

				 b->e 
		 The weight > 0 && not been visited
		Write to the path...


	There are unconsidered vertices in the stack
	We are looking for neighbors, for the vertex: e

				 e->a 
				 e->f 
		 The weight > 0 && not been visited
		Write to the path...


	There are unconsidered vertices in the stack
	We are looking for neighbors, for the vertex: f

				 f->g 

	There are unconsidered vertices in the stack
	We are looking for neighbors, for the vertex: d

				 d->e 

	PATH NOT FOUND!!!
9
a b 1
a c 0
a g 8
b d 0
b e 1
c m 0
d e 0
e a 0
e f 1
f g 1
m n 0
